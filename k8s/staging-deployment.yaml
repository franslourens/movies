apiVersion: v1
kind: ConfigMap
metadata:
  name: laravel-todo
data:
 config: |
  APP_NAME=Movies
  APP_ENV=production
  APP_KEY=base64:pAPIqD/yZ+2P6PIOztj4vU4nfHP+T1pyn5n58eNPRyc=
  APP_DEBUG=true
  APP_URL=https://staging.franslourens.co.za
  
  LOG_CHANNEL=stack
  
  DB_CONNECTION=mysql
  DB_HOST=mysql-cluster-ip-service
  DB_PORT=3306
  DB_DATABASE=movies
  DB_USERNAME=root
  DB_PASSWORD="${MYSQL_PASSWORD}"
  
  BROADCAST_DRIVER=log
  CACHE_DRIVER=memcached
  QUEUE_CONNECTION=sync
  SESSION_DRIVER=memcached
  SESSION_LIFETIME=120
  SESSION_DOMAIN=
  SESSION_SECURE_COOKIE=
  MEMCACHED_HOST=memcache-cluster-ip-service
  MEMCACHED_PORT=11211
  
  REDIS_HOST=127.0.0.1
  REDIS_PASSWORD=null
  REDIS_PORT=6379
  
  MAIL_DRIVER=smtp
  MAIL_HOST=smtp.mailtrap.io
  MAIL_PORT=2525
  MAIL_USERNAME=null
  MAIL_PASSWORD=null
  MAIL_ENCRYPTION=null
  
  AWS_ACCESS_KEY_ID=
  AWS_SECRET_ACCESS_KEY=
  AWS_DEFAULT_REGION=us-east-1
  AWS_BUCKET=
  
  PUSHER_APP_ID=
  PUSHER_APP_KEY=
  PUSHER_APP_SECRET=
  PUSHER_APP_CLUSTER=mt1
  
  MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
  MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: staging-deployment
spec: 
  replicas: 2
  selector: 
    matchLabels: 
      component: staging-web
  template: 
    metadata: 
      labels: 
        component: staging-web
    spec:
      volumes:
        - name: code
          emptyDir: {} 
        - name: sock
          emptyDir: {}
        - name: config-volume
          configMap:
            name: laravel-todo
            items:
            - key: config
              path: env
        - name: db-secret
          secret:
            secretName: staging-db
        - name: environment-secret
          secret:
            secretName: staging-environment
        - name: my-pvc-nfs
          persistentVolumeClaim:
            claimName: nfs
      initContainers:
        - args:
            - /bin/bash
            - -c
            - (chown -R app:www-data /app/ && cp -rp /app/ /var/www/movies/)
              && (chown -R app:www-data /var/www/movies/ && chown -R app:www-data /var/www/movies/bootstrap/cache)
              && (chmod -R 775 /var/www/movies/storage && chmod -R 775 /var/www/movies/bootstrap/cache) && cp /etc/config/env /var/www/movies/.env && (php artisan migrate || true) && (php artisan cache:clear || true)
              && (php artisan route:clear || true) && (php artisan cache:clear || true) && (php artisan config:cache || true)
          image: franslourens/php-laravel
          name: artisan
          env:
            - name: MYSQL_HOST
              value: mysql-cluster-ip-service
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: mysqlpassword
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - name: config-volume
              mountPath: /etc/config
      containers: 
        - 
          image: franslourens/nginx-laravel
          name: nginx
          imagePullPolicy: Always
          ports: 
            - 
              containerPort: 80
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - 
              name: sock
              mountPath: /socket
        - 
          image: franslourens/php-laravel
          env:
            - name: MYSQL_HOST
              value: mysql-cluster-ip-service
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: mysqlpassword
          imagePullPolicy: Always
          name: fpm
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - 
              name: sock
              mountPath: /socket
            -
              name: db-secret
              mountPath: /etc/db-secret
            -
              name: environment-secret
              mountPath: /etc/environment-secret
            - name: my-pvc-nfs
              mountPath: "/var/www/movies/public/nfs/"
