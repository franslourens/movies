apiVersion: v1
kind: ConfigMap
metadata:
  name: laravel-todo
data:
 config: |
  APP_DEBUG: "false"
  APP_ENV: production
  APP_KEY: base64:pAPIqD/yZ+2P6PIOztj4vU4nfHP+T1pyn5n58eNPRyc=
  APP_LOG_LEVEL: debug
  APP_NAME: "Kubernetes"
  APP_URL: https://www.laravel.com
  BROADCAST_DRIVER: pusher
  CACHE_DRIVER: redis
  QUEUE_DRIVER: redis
  SESSION_DRIVER: redis
  DB_CONNECTION: mysql
  DB_DATABASE: task
  DB_HOST: host
  DB_PASSWORD: password
  DB_PORT: "3306"
  DB_USERNAME: username
  REDIS_HOST: redis
  REDIS_PORT: "6379"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: sample-app-config
data:
  # ------------------------------------------------------------------------------
  # app
  # ------------------------------------------------------------------------------

  APP_NAME: laravel
  APP_ENV: local
  APP_DEBUG: "true"
  APP_URL: https://sample-laravel.localhost
  #APP_KEY:

  # NOTE: to use stern
  LOG_CHANNEL: errorlog

  # ------------------------------------------------------------------------------
  # DB
  # ------------------------------------------------------------------------------

  DB_HOST: mysql
  DB_USERNAME: root
  DB_PASSWORD: root

  DB_CONNECTION: mysql
  DB_DATABASE: sample
  DB_DATABASE_TEST: sample_test

  REDIS_HOST: redis-master

  # ------------------------------------------------------------------------------
  # MAIL
  # ------------------------------------------------------------------------------

  MAIL_DRIVER: smtp
  MAIL_HOST: smtp.mailtrap.io
  MAIL_PORT: "2525"
  MAIL_USERNAME: "null"
  MAIL_PASSWORD: "null"
  MAIL_ENCRYPTION: "null"
---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: client-deployment
spec: 
  replicas: 1
  selector: 
    matchLabels: 
      component: web
  template: 
    metadata: 
      labels: 
        component: web
    spec:
      volumes:
        - name: code
          emptyDir: {} 
        - name: sock
          emptyDir: {}
        - name: config-volume
          configMap:
            name: laravel-todo
            items:
            - key: config
              path: keys
      initContainers:
        - args:
            - /bin/bash
            - -c
            - (chown -R app:www-data /app/ && cp -rp /app/ /var/www/movies/)
              && (chown -R app:www-data /var/www/movies/ && chown -R app:www-data /var/www/movies/bootstrap/cache)
              && (chmod -R 775 /var/www/movies/storage && chmod -R 775 /var/www/movies/bootstrap/cache) && cp /etc/config/keys /var/www/movies/.env
          image: franslourens/php-laravel
          name: artisan
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - name: config-volume
              mountPath: /etc/config  
      containers: 
        - 
          image: franslourens/nginx-laravel
          name: nginx
          envFrom:
            - configMapRef:
                name: sample-app-config
          imagePullPolicy: Always
          ports: 
            - 
              containerPort: 80
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - 
              name: sock
              mountPath: /socket
        - 
          image: franslourens/php-laravel
          env:
            - name: MYSQL_HOST
              value: mysql-cluster-ip-service
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysqlpassword
                  key: mysqlpassword
            - name: MEMCACHE_HOST
              value: memcache-cluster-ip-service
            - name: MEMCACHE_PORT
              value: "11211"
            - name: AUTH_HOST
              value: client-cluster-ip-service
          imagePullPolicy: Always
          name: fpm
          envFrom:
            - configMapRef:
                name: sample-app-config
          volumeMounts:
            - 
              name: code
              mountPath: /var/www
            - 
              name: sock
              mountPath: /socket